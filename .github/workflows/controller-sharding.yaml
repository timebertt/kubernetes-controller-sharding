name: controller-sharding

on:
  push:
    branches:
    - main
    tags:
    - v*
    paths-ignore:
    - "webhosting-operator/**"
    - ".github/workflows/webhosting-operator.yaml"
    - "**.md"
  pull_request:
    paths-ignore:
    - "webhosting-operator/**"
    - ".github/workflows/webhosting-operator.yaml"

jobs:
  verify:
    runs-on: ubuntu-latest

    # update-codegen requires the workspace to be placed in GOPATH.
    # Set up env var, working directory, and check out at the correct path in GOPATH.
    env:
      GOPATH: /home/runner/work/kubernetes-controller-sharding/kubernetes-controller-sharding/go
    defaults:
      run:
        working-directory: go/src/github.com/timebertt/kubernetes-controller-sharding

    steps:
    - uses: actions/checkout@v4
      with:
        path: go/src/github.com/timebertt/kubernetes-controller-sharding
    - uses: actions/setup-go@v5
      with:
        go-version-file: go/src/github.com/timebertt/kubernetes-controller-sharding/go.mod
        cache-dependency-path: go/src/github.com/timebertt/kubernetes-controller-sharding/go.sum
    - name: Verify
      run: make verify

  images:
    runs-on: ubuntu-latest
    env:
      # renovate: datasource=github-releases depName=ko-build/ko
      KO_VERSION: v0.15.1
    steps:
    - uses: actions/checkout@v4
      with:
        # fetch all history so that git describe works (needed by hack/prepare-image-metadata.sh)
        fetch-depth: 0
    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
    - uses: ko-build/setup-ko@v0.6
      with:
        version: ${{ env.KO_VERSION }}
    - name: Prepare image metadata
      id: meta
      run: ./hack/prepare-image-metadata.sh
    - name: ko build
      run: |
        set -ex

        # prepare .ko.yaml to inject build settings into all images
        entrypoints=(
          ./cmd/sharder
          ./cmd/shard
          ./hack/cmd/janitor
        )
        
        echo builds: > .ko.yaml
        for entrypoint in "${entrypoints[@]}" ; do
        cat >> .ko.yaml <<EOF
        - main: $entrypoint
          ldflags:
          - |
            {{.Env.LDFLAGS}}
        EOF
        done

        ko build --push=${{ github.event_name != 'pull_request' }} --sbom none --base-import-paths \
          --tags "${{ steps.meta.outputs.tags }}" --image-label "${{ steps.meta.outputs.labels }}" \
          --platform linux/amd64,linux/arm64 \
          "${entrypoints[@]}"
