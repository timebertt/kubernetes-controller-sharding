{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    "config:recommended",
    ":semanticCommitsDisabled",
    "regexManagers:githubActionsVersions"
  ],
  postUpdateOptions: ["gomodTidy"],
  kubernetes: {
    fileMatch: ["\\.yaml$"]
  },
  customManagers: [
    {
      // generic detection for install manifests from GitHub releases
      customType: "regex",
      fileMatch: ["kustomization\\.yaml$"],
      matchStrings: ["https:\/\/github\\.com\/(?<depName>.*\/.*?)\/releases\/download\/(?<currentValue>.*?)\/"],
      datasourceTemplate: "github-releases"
    },
    {
      // generic detection for raw manifests from GitHub refs
      customType: "regex",
      fileMatch: ["kustomization\\.yaml$"],
      matchStrings: ["https:\/\/raw.githubusercontent.com\/(?<depName>.*?/.*?)\/(?<currentValue>.*?)\/"],
      datasourceTemplate: "github-tags"
    },
    {
      // update `_VERSION` variables in scripts
      // inspired by `regexManagers:dockerfileVersions` preset
      customType: "regex",
      fileMatch: ["\\.sh$"],
      matchStrings: [
        "# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s.+?_VERSION[ =]\"?(?<currentValue>.+?)\"?\\s"
      ],
    },
    {
      // update `_VERSION` variables in Makefiles
      // inspired by `regexManagers:dockerfileVersions` preset
      customType: "regex",
      fileMatch: ["\/Makefile$", "\/.+\\.mk"],
      matchStrings: [
        "# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s.+?_VERSION *[?:]?= *\"?(?<currentValue>.+?)\"?\\s"
      ],
    },
  ],
  packageRules: [
    {
      // bump k8s and controller-runtime dependencies together
      groupName: "k8s packages",
      groupSlug: "k8s-go",
      matchDatasources: ["go"],
      matchPackagePrefixes: ["k8s.io/", "sigs.k8s.io/controller-runtime"]
    },
    {
      // setup-envtest is not tagged, don't create a PR for every commit in controller-runtime
      matchDatasources: ["go"],
      matchPackageNames: ["sigs.k8s.io/controller-runtime/tools/setup-envtest"],
      dependencyDashboardApproval: true
    },
    {
      // bump webhosting-operator dependencies and tools in separate PRs
      matchFileNames: ["webhosting-operator/**"],
      additionalBranchPrefix: "webhosting-operator-",
      commitMessagePrefix: "webhosting-operator"
    },
    {
      // k8s and controller-runtime dependencies in webhosting-operator can only be upgraded after rebasing the sharding
      // implementation in the controller-runtime fork, disable bumps
      matchDatasources: ["go"],
      matchFileNames: ["webhosting-operator/go.mod"],
      matchPackagePrefixes: ["k8s.io/", "sigs.k8s.io/controller-runtime", "github.com/timebertt/controller-runtime"],
      enabled: false
    },
    {
      // combine upgrade of manifests and image tag in one PR
      groupName: "external-dns",
      matchPackagePatterns: ["external-dns"]
    },
    {
      // special case for ingress-nginx: version is prefixed with `controller-`
      matchDatasources: ["github-tags"],
      matchPackageNames: ["kubernetes/ingress-nginx"],
      extractVersion: "^controller-(?<version>.+)$"
    },
    {
      // manual action required: upgrading kube-prometheus is not fully automated yet
      matchDatasources: ["github-tags"],
      matchPackageNames: ["prometheus-operator/kube-prometheus"],
      prHeader: "⚠️ Manual action required ⚠️\nPlease check this PR out and run `hack/config/monitoring/update.sh`."
    }
  ]
}
