{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    "config:recommended",
    ":semanticCommitsDisabled",
    "regexManagers:githubActionsVersions"
  ],
  labels: ["dependencies"],
  postUpdateOptions: ["gomodTidy"],
  automergeStrategy: "squash",
  kubernetes: {
    fileMatch: ["\\.yaml$"]
  },
  customManagers: [
    {
      // generic detection for install manifests from GitHub releases
      customType: "regex",
      fileMatch: ["kustomization\\.yaml$"],
      matchStrings: ["https:\/\/github\\.com\/(?<depName>.*\/.*?)\/releases\/download\/(?<currentValue>.*?)\/"],
      datasourceTemplate: "github-releases"
    },
    {
      // generic detection for raw manifests from GitHub refs
      customType: "regex",
      fileMatch: ["kustomization\\.yaml$"],
      matchStrings: ["https:\/\/raw.githubusercontent.com\/(?<depName>.*?/.*?)\/(?<currentValue>.*?)\/"],
      datasourceTemplate: "github-tags"
    },
    {
      // update `_VERSION` variables in Makefiles and scripts
      // inspired by `regexManagers:dockerfileVersions` preset
      customType: "regex",
      fileMatch: ["Makefile$", "\\.mk$", "\\.sh$"],
      matchStrings: [
        "# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s.+?_VERSION *[?:]?= *\"?(?<currentValue>.+?)\"?\\s"
      ]
    }
  ],
  packageRules: [
    {
      // bump k8s and controller-runtime go dependencies together
      groupName: "k8s packages",
      groupSlug: "k8s-go",
      matchDatasources: ["go"],
      matchPackagePrefixes: [
        // from "group:kubernetes"
        "k8s.io/api",
        "k8s.io/apiextensions-apiserver",
        "k8s.io/apimachinery",
        "k8s.io/apiserver",
        "k8s.io/cli-runtime",
        "k8s.io/client-go",
        "k8s.io/cloud-provider",
        "k8s.io/cluster-bootstrap",
        "k8s.io/code-generator",
        "k8s.io/component-base",
        "k8s.io/controller-manager",
        "k8s.io/cri-api",
        "k8s.io/csi-translation-lib",
        "k8s.io/kube-aggregator",
        "k8s.io/kube-controller-manager",
        "k8s.io/kube-proxy",
        "k8s.io/kube-scheduler",
        "k8s.io/kubectl",
        "k8s.io/kubelet",
        "k8s.io/legacy-cloud-providers",
        "k8s.io/metrics",
        "k8s.io/mount-utils",
        "k8s.io/pod-security-admission",
        "k8s.io/sample-apiserver",
        "k8s.io/sample-cli-plugin",
        "k8s.io/sample-controller",
        // added packages
        "sigs.k8s.io/controller-runtime"
      ]
    },
    {
      // separate k8s patch updates (keep in sync with the next package rule)
      matchPackagePrefixes: [
        // datasource=go
        "k8s.io/", // includes more than the k8s-go group! (e.g., k8s.io/utils)
        "sigs.k8s.io/controller-runtime",
        // datasource=github-tags
        "kubernetes/kubernetes",
        "kubernetes-sigs/controller-tools"
      ],
      separateMinorPatch: true
    },
    {
      // automerge k8s patch updates (keep in sync with the previous package rule)
      matchPackagePrefixes: [
        // datasource=go
        "k8s.io/", // includes more than the k8s-go group! (e.g., k8s.io/utils)
        "sigs.k8s.io/controller-runtime",
        // datasource=github-tags
        "kubernetes/kubernetes",
        "kubernetes-sigs/controller-tools"
      ],
      matchUpdateTypes: ["patch", "digest"],
      automerge: true
    },
    {
      // setup-envtest is not tagged, don't create a PR for every commit in controller-runtime
      matchDatasources: ["go"],
      matchPackageNames: ["sigs.k8s.io/controller-runtime/tools/setup-envtest"],
      enabled: false
    },
    {
      // jsonpatch has to be kept in sync with k8s and controller-runtime dependencies
      matchDatasources: ["go"],
      matchPackagePrefixes: ["gomodules.xyz/jsonpatch"],
      enabled: false
    },
    {
      // bump webhosting-operator dependencies and tools in separate PRs
      matchFileNames: [
        "webhosting-operator/**",
        ".github/workflows/webhosting-operator.yaml"
      ],
      additionalBranchPrefix: "webhosting-operator-",
      commitMessagePrefix: "webhosting-operator:"
    },
    {
      // k8s and controller-runtime dependencies in webhosting-operator can only be upgraded after rebasing the sharding
      // implementation in the controller-runtime fork, disable bumps
      matchDatasources: ["go"],
      matchFileNames: ["webhosting-operator/go.mod"],
      matchPackagePrefixes: ["k8s.io/", "sigs.k8s.io/controller-runtime", "github.com/timebertt/controller-runtime"],
      enabled: false
    },
    {
      // kind k8s version should be updated together with shoot k8s version
      matchPackageNames: ["kindest/node"],
      enabled: false
    },
    {
      // combine upgrade of manifests and image tag in one PR
      groupName: "external-dns",
      matchPackagePatterns: ["external-dns"]
    },
    {
      // special case for ingress-nginx: version is prefixed with `controller-`
      matchDatasources: ["github-tags"],
      matchPackageNames: ["kubernetes/ingress-nginx"],
      "versionCompatibility": "^(?<compatibility>.*)-(?<version>.+)$"
    },
    {
      // manual action required: upgrading kube-prometheus is not fully automated yet
      matchDatasources: ["github-tags"],
      matchPackageNames: ["prometheus-operator/kube-prometheus"],
      prHeader: "⚠️ Manual action required ⚠️\nPlease check this PR out and run `hack/config/monitoring/update.sh`."
    },
    {
      // kube-prometheus manifests are generated and managed by update.sh, disable renovate bumps
      matchFileNames: ["hack/config/monitoring/{crds,kube-prometheus}/**"],
      enabled: false
    },
    // help renovate fetch changelogs for packages that don't have any sourceUrl metadata attached
    {
      matchPackageNames: ["registry.k8s.io/prometheus-adapter/prometheus-adapter"],
      customChangelogUrl: "https://github.com/kubernetes-sigs/prometheus-adapter"
    },
    {
      matchPackageNames: ["registry.k8s.io/kube-state-metrics/kube-state-metrics"],
      customChangelogUrl: "https://github.com/kubernetes/kube-state-metrics"
    },
    {
      matchPackageNames: ["quay.io/brancz/kube-rbac-proxy"],
      customChangelogUrl: "https://github.com/brancz/kube-rbac-proxy"
    }
  ]
}
